// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UberEats.Models;

#nullable disable

namespace UberEats.Migrations
{
    [DbContext(typeof(UberEatsContext))]
    partial class UberEatsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UberEats.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Restaurant"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Grocery"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Alcohol"
                        },
                        new
                        {
                            CategoryID = 4,
                            Name = "Convenience"
                        },
                        new
                        {
                            CategoryID = 5,
                            Name = "Flowers"
                        },
                        new
                        {
                            CategoryID = 6,
                            Name = "Petstore"
                        },
                        new
                        {
                            CategoryID = 7,
                            Name = "Retail"
                        });
                });

            modelBuilder.Entity("UberEats.Models.Partner", b =>
                {
                    b.Property<int>("PartnerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartnerID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PartnerID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Partners");

                    b.HasData(
                        new
                        {
                            PartnerID = 1,
                            Address = "Ash Road",
                            CategoryID = 2,
                            Email = "iharvd@mail.com",
                            Name = "Indian Harvest",
                            Phone = 793648292,
                            Status = false
                        },
                        new
                        {
                            PartnerID = 2,
                            Address = "Ash Road",
                            CategoryID = 4,
                            Email = "celicreate@email.com",
                            Name = "Celidan creation",
                            Phone = 793657592,
                            Status = false
                        },
                        new
                        {
                            PartnerID = 3,
                            Address = "Spruce Street",
                            CategoryID = 1,
                            Email = "chicks@email.com",
                            Name = "CHicken Inn",
                            Phone = 795849292,
                            Status = false
                        });
                });

            modelBuilder.Entity("UberEats.Models.Partner", b =>
                {
                    b.HasOne("UberEats.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
